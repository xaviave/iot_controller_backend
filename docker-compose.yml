services:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: env/.env
    ports:
      - "5433:5432"
    networks:
      - app-network
    restart: always

  grpc_server:
    build: .
    command: python srcs/manage.py grpcrunaioserver 0.0.0.0:50053 --dev
    env_file: env/.env
    volumes:
      - .:/iot_controller_backend
    ports:
      - "50053:50053"
    depends_on:
      - db
      - redis
    networks:
      - app-network
    restart: always

  web:
    build: .
    command: python srcs/manage.py runserver 0.0.0.0:8001
    volumes:
      - .:/iot_controller_backend
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
    env_file: env/.env
    networks:
      - app-network
    restart: always

  celery_worker:
    build: .
    env_file: env/.env
    command: celery -A srcs.base_app worker --loglevel=info -E
    volumes:
      - .:/iot_controller_backend
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    env_file: env/.env
    command: celery -A srcs.base_app beat --loglevel=info
    volumes:
      - .:/iot_controller_backend
    depends_on:
      - db
      - redis

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    expose:
      - 6379
    networks:
      - app-network
    restart: always


volumes:
  postgres_data:


networks:
  app-network:
    driver: bridge
